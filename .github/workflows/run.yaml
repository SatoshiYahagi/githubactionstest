# test work file

#  GitHub リポジトリの Actions ページで表示されるワークフローの名前
name: learn-github-actions

# トリガーアクション（対象ブランチ指定はなし）
on: [push]

env:
  # ビルドサーバでビルドに使用する Unity.exe の格納パス
  BUILD_SERVER_UNITY_PATH: /Applications/Unity/2021.2.17f1
  # ビルドサーバでビルド対象となるプロジェクトのパス
  BUILD_SERVER_PROJECT_PATH: "/Users/unity-build/project/GithubActionsBuildProto/GitHubActionsTest/My project"

jobs:
# ジョブの名前
  build:
    # セルフホストランナーで実行
    runs-on: self-hosted
    steps:
       - name: Checkout
         uses: actions/checkout@v2
         # リポジトリのチェックアウト時にLibraryフォルダ等を消さないよう「clean: false」
         # Git LFSを使用している場合は 「lfs: true」が必要
         with:
           fetch-depth: 0
           lfs: true
           clean: false

       # 1 つのセルフホスト ランナーは、一度に 1 つのジョブしか実行できません。
       # 使用可能なランナーがアイドル状態でない場合、後続のジョブは、使用可能なランナーがアイドル状態になるまでキューに入れられます。
       # 同じマシンに複数のランナーを置きたい場合は、異なるユーザーで実行できます。
       #  https://github.com/orgs/community/discussions/26769
       - name: Unity Build
         shell: cmd
         run: |
           ${{ env.BUILD_SERVER_UNITY_PATH }}/Unity.app/Contents/MacOS/Unity -quit -batchmode -nographics -projectPath ${{ env.BUILD_SERVER_PROJECT_PATH }} -executeMethod Builder.BuildAndroid Android

       # Copy-Item (※PowerShell用コマンド) でビルドされた .apk ファイルを確保しています。コピー先フォルダを適当に変更してください。
       - name: Release
         run: Copy-Item Build\Application.apk D:\Builds\Application${{ github.run_number }}.apk

  upload:
    # 最新のubuntuで実行？
    runs-on: ubuntu-latest
    needs: build
    steps:
       # Google Driveにアップロードするファイルが入るディレクトリ作成
       - run: |
           mkdir upload
           find . -name "*.pdf" | xargs -I{} sh -c 'mkdir -p $(dirname {}); cp "{}" $(dirname "upload/{}")'

       # テスト用ファイルを作成ディレクトリに配置
       - name: Upload file create
         id: file_create
         run: echo "branch=$(echo upload_test. > upload/UploadTest.txt)" >> $GITHUB_OUTPUT
       # set-output は非推奨え廃止予定のため書き換え
       # run: echo "##[set-output name=branch;]$(echo upload_test. > upload/UploadTest.txt)"

       # Google Drive へのアップロード
       - name: Upload to Google Drive
         uses: satackey/action-google-drive@v1
         with:
           skicka-tokencache-json: ${{ secrets.SKICKA_TOKENCACHE_JSON }}
           upload-from: ./upload
           upload-to: /path/to
         # For those who set up Google Drive API client ID and secret themselves
           google-client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
           google-client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}

# Google Drive からのダウンロード
#       - name: Download from Google Drive
#         uses: satackey/action-google-drive@v1
#         with:
#           skicka-tokencache-json: ${{ secrets.SKICKA_TOKENCACHE_JSON }}
#           download-from: /path/to/download
#           download-to: ./
#
# For those who set up Google Drive API client ID and secret themselves
#           google-client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
#           google-client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}